{% set module_doc = "Auto-generated from OpenAPI. Edits may be overwritten. Put business logic in app/services." %}
# {{ module_doc }}
from typing import Any, Optional, List, Dict
from uuid import UUID
from datetime import date, datetime
from fastapi import APIRouter, Depends, Path, Query, Body
from app.schemas.models import *  # noqa: F403,F401

router = APIRouter(tags=["{{ public_tag }}"])

{% for op in operations %}
@router.{{ op.method }}(
    "{{ op.path }}",
    {% if op.response_model %}response_model={{ op.response_model }},{% endif %}
    {% if op.status_code %}status_code={{ op.status_code }},{% endif %}
)
async def {{ op.func_name }}(
    {%- for p in op.params -%}
    {{ p.name }}: {{ p.type_hint }}{{ " = " + p.default if p.default is not none else "" }},
    {%- endfor -%}
    {%- if op.body is not none -%}
    body: {{ op.body.model }} = Body(...),
    {%- endif -%}
) -> {{ op.return_hint }}:
    """
    {{ op.summary or "" }}
    OperationId: {{ op.operation_id }}
    {{ op.notes }}
    """
    # TODO: Implement business logic in app/services and call it here.
    # Example: return await services.{{ module_stub }}.{{ op.func_name }}(...)
    raise NotImplementedError("{{ op.method|upper }} {{ op.path }} not implemented yet")
{% endfor %}